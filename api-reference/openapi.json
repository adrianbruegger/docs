{
  "openapi": "3.0.1",
  "info": {
    "title": "Scango API",
    "description": "API documentation for Scango's dashboard services",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dashboard.scango.ch/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "description": "Returns all products of a specific organization",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new product. Requires an API key with write permissions.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Product to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API key has no write permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "description": "Returns a specific product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Updates a specific product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated product data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a specific product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "ID of the product to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "description": "Returns orders of a specific organization",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (Format: 2020-01-01T00:00:00Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (Format: 2020-01-01T00:00:00Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "paymentState",
            "in": "query",
            "description": "Payment status filter",
            "schema": {
              "type": "string",
              "enum": ["successful", "cancelled", "timeout", "failed", "pending"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "description": "Returns details of a specific order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "ID of the order to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "description": "Returns all suppliers of an organization",
        "responses": {
          "200": {
            "description": "List of suppliers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Supplier"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{supplierId}": {
      "get": {
        "description": "Returns details of a specific supplier",
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "description": "ID of the supplier to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Supplier"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "description": "Returns all categories of an organization",
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "description": "Returns details of a specific category",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "description": "ID of the category to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "price": {
            "type": "integer",
            "description": "Price in cents"
          },
          "supplier": {
            "type": "string",
            "description": "Supplier of the product"
          },
          "taxCategory": {
            "type": "string",
            "enum": ["8.1", "2.6", "3.8", "0"],
            "description": "Tax category"
          },
          "category": {
            "type": "string",
            "description": "Category ID of the product"
          },
          "declarations": {
            "type": "string",
            "description": "Product declarations"
          },
          "barcode": {
            "type": "string",
            "description": "Product barcode"
          },
          "depositProduct": {
            "type": "integer",
            "description": "Deposit amount in cents"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "salePrice": {
            "type": "integer",
            "description": "Sale price in cents"
          },
          "salePercentage": {
            "type": "number",
            "description": "Sale percentage"
          },
          "salePriceDateFrom": {
            "type": "string",
            "format": "date",
            "description": "Sale start date"
          },
          "salePriceDateTo": {
            "type": "string",
            "format": "date",
            "description": "Sale end date"
          },
          "costPrice": {
            "type": "integer",
            "description": "Cost price in cents"
          },
          "margin": {
            "type": "number",
            "description": "Product margin"
          },
          "showOnHomescreen": {
            "type": "boolean",
            "description": "Show on homescreen"
          },
          "showOnScreen": {
            "type": "boolean",
            "description": "Show on screen"
          },
          "ageRestriction": {
            "type": "boolean",
            "description": "Age restriction"
          },
          "showOnScale": {
            "type": "boolean",
            "description": "Show on scale"
          },
          "saleStop": {
            "type": "boolean",
            "description": "Sale stop"
          },
          "index": {
            "type": "integer",
            "description": "Product index"
          }
        }
      },
      "NewProduct": {
        "$ref": "#/components/schemas/Product"
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "giftcardCurrentValue": {
            "type": "integer"
          },
          "instance": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "giftcardFunction": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "store": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "orderDate": {
            "type": "object",
            "properties": {
              "_seconds": {
                "type": "integer"
              },
              "_nanoseconds": {
                "type": "integer"
              }
            }
          },
          "orderState": {
            "type": "string"
          },
          "giftcardId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer"
                },
                "productId": {
                  "type": "string"
                },
                "netPrice": {
                  "type": "integer"
                },
                "tax": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "taxRate": {
                  "type": "number"
                },
                "originalProductId": {
                  "type": "string"
                },
                "price": {
                  "type": "integer"
                },
                "supplier": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "deposit": {
                  "type": "integer"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          },
          "paymentBrand": {
            "type": "string"
          },
          "transactionDate": {
            "type": "object",
            "properties": {
              "_seconds": {
                "type": "integer"
              },
              "_nanoseconds": {
                "type": "integer"
              }
            }
          },
          "paymentState": {
            "type": "string",
            "enum": ["successful", "cancelled", "timeout", "failed", "pending"]
          },
          "transactionMessage": {
            "type": "string"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}